Index: src/main/java/it/polimi/ingsw/PSP38/client/GUIComponents/WaitingPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polimi.ingsw.PSP38.client.GUIComponents;\r\n\r\nimport it.polimi.ingsw.PSP38.client.ImageCollection;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.net.URISyntaxException;\r\nimport java.util.Objects;\r\n\r\npublic class WaitingPanel {\r\n    private JPanel waitingPanel;\r\n    private JPanel imagePanel;\r\n    private JPanel hourglassPanel;\r\n    private JLabel waitLabel;\r\n    private JLabel hourglassLabel;\r\n\r\n    public JPanel createWaitingPanel(String imageURL){\r\n        waitingPanel = new JPanel();\r\n        waitingPanel.setLayout(new BorderLayout());\r\n        waitingPanel.setBackground(Color.WHITE);\r\n        waitingPanel.add(createWaitImagePanel(imageURL), BorderLayout.CENTER);\r\n        waitingPanel.add(createHourglassPanel(), BorderLayout.SOUTH);\r\n        return waitingPanel;\r\n    }\r\n    public JPanel createWaitImagePanel(String imageURL) {\r\n        Image waitImage=null;\r\n        Image waitImageScaled;\r\n        imagePanel= new JPanel();\r\n        File dir = null;\r\n        try {\r\n            dir = new File(Objects.requireNonNull(ImageCollection.class.getClassLoader()\r\n                    .getResource(imageURL)).toURI());\r\n        } catch (URISyntaxException e) {\r\n            e.printStackTrace();\r\n        }\r\n        try {\r\n            waitImage= ImageIO.read(dir);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        waitImageScaled =waitImage.getScaledInstance(500,-1,Image.SCALE_SMOOTH);\r\n        waitLabel = new JLabel(new ImageIcon(waitImageScaled));\r\n        imagePanel.add(waitLabel);\r\n        return imagePanel;\r\n    }\r\n\r\n    public JPanel createHourglassPanel(){\r\n        Image hourglass = null;\r\n        Image hourglassScaled;\r\n        hourglassPanel= new JPanel();\r\n        File dir = null;\r\n        try {\r\n            dir = new File(Objects.requireNonNull(ImageCollection.class.getClassLoader()\r\n                    .getResource(\"hourglass.gif\")).toURI());\r\n        } catch (URISyntaxException e) {\r\n            e.printStackTrace();\r\n        }\r\n        try {\r\n            hourglass = ImageIO.read(dir);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        hourglassScaled=hourglass.getScaledInstance(100,-1,Image.SCALE_DEFAULT);\r\n        hourglassLabel = new JLabel(new ImageIcon(hourglassScaled));\r\n        imagePanel.add(hourglassLabel);\r\n        return hourglassPanel;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/it/polimi/ingsw/PSP38/client/GUIComponents/WaitingPanel.java	(revision a75d8b2d514bb7951bce45cb03f6da1b5862fcd9)
+++ src/main/java/it/polimi/ingsw/PSP38/client/GUIComponents/WaitingPanel.java	(date 1592822956047)
@@ -43,6 +43,7 @@
         }
         waitImageScaled =waitImage.getScaledInstance(500,-1,Image.SCALE_SMOOTH);
         waitLabel = new JLabel(new ImageIcon(waitImageScaled));
+        waitLabel.setBackground(Color.WHITE);
         imagePanel.add(waitLabel);
         return imagePanel;
     }
Index: src/main/java/it/polimi/ingsw/PSP38/client/GameModeGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.polimi.ingsw.PSP38.client;\r\n\r\n//import it.polimi.ingsw.PSP38.client.GUIComponents.ConnectionComponent;\r\nimport it.polimi.ingsw.PSP38.client.GUIComponents.SantoriniWindow;\r\nimport it.polimi.ingsw.PSP38.common.Message;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.lang.reflect.InvocationTargetException;\r\n\r\n\r\npublic class GameModeGUI implements GameMode {\r\n    volatile boolean isDataReady = false;\r\n    private String dataReadFromClient;\r\n    private static String nickname = \"anonymous\";\r\n    private static String age;\r\n    private JFrame frame;\r\n    private String customStringRead;\r\n    private SantoriniWindow santoriniWindow;\r\n\r\n\r\n    public GameModeGUI() throws InvocationTargetException, InterruptedException {\r\n        SwingUtilities.invokeAndWait(() -> {\r\n            santoriniWindow =new SantoriniWindow();\r\n            frame = santoriniWindow.createSantoriniWindow(this);\r\n        });\r\n    }\r\n\r\n    public JFrame getFrame(){return frame;}\r\n\r\n\r\n    public void insertNumPlayer() {\r\n        Object[] options = {\"2\", \"3\"};\r\n                int n = JOptionPane.showOptionDialog(santoriniWindow.getStartPanel().getStartPanel(),\r\n                        \"You are the first player to join this game. Please insert the number of players\",\r\n                        null,\r\n                        JOptionPane.YES_NO_OPTION,\r\n                        JOptionPane.QUESTION_MESSAGE,\r\n                        null,\r\n                        options,\r\n                        null);\r\n                if (n==JOptionPane.YES_OPTION){\r\n                    setStringRead(\"2\");\r\n\r\n                }else if(n==JOptionPane.NO_OPTION){\r\n                    setStringRead(\"3\");\r\n                }\r\n    }\r\n\r\n    public void illegalString() {\r\n        System.out.println(\"String not recognized exception: \" + customStringRead);\r\n        String newString;\r\n        do{\r\n            newString = JOptionPane.showInputDialog(null, customStringRead,\"String not recognized exception: \",JOptionPane.QUESTION_MESSAGE);\r\n        }while (newString.equals(\"\"));\r\n        setStringRead(newString);\r\n    }\r\n\r\n    public void illegalInt() {\r\n        System.out.println(\"Integer not recognized exception: \" + customStringRead);\r\n        String newStringInt;\r\n        do{\r\n            newStringInt = JOptionPane.showInputDialog(null,customStringRead,\"Integer not recognized exception: \",JOptionPane.QUESTION_MESSAGE);\r\n        }while (newStringInt.equals(\"\"));\r\n        setStringRead(newStringInt);\r\n    }\r\n\r\n\r\n\r\n    public void waitForNumPlayer() {\r\n        System.out.println(\"Please wait for the first player to select the number of players.\");\r\n\r\n    }\r\n\r\n    public void gameFull() {\r\n        JOptionPane.showMessageDialog(null,\"The game is currently full, please try later.\",\"Game full \",JOptionPane.WARNING_MESSAGE);\r\n    }\r\n\r\n    public void chooseNickname() {\r\n        setStringRead(nickname);\r\n    }\r\n\r\n    public void illegalNickname() {\r\n        String newNickname;\r\n        newNickname = JOptionPane.showInputDialog(\"This nickname is unavailable, please choose another one:\");\r\n        nickname = newNickname;\r\n        setStringRead(newNickname);\r\n    }\r\n\r\n    public void setAge() {\r\n        setStringRead(age);\r\n    }\r\n\r\n    public void waitForDivinities() {\r\n        System.out.println(\"Please wait for \" + customStringRead + \" to choose the divinity cards that will be used in this game\");\r\n    }\r\n\r\n    public void notYourTurn() {\r\n        System.out.println(\"It's \" + customStringRead + \"'s turn, please wait\");\r\n    }\r\n\r\n    public void placeYourWorkers() {\r\n        System.out.println(\"Please place all of your workers on the board\");\r\n    }\r\n\r\n\r\n    public void placeAWorker() {\r\n        System.out.println(\"Place your worker number \" + customStringRead);\r\n    }\r\n\r\n    public void setCellXCoordinate() {\r\n        System.out.println(\"Please insert the cell's x coordinate\");\r\n    }\r\n\r\n    public void setCellYCoordinate() {\r\n        System.out.println(\"Please insert the cell's y coordinate\");\r\n    }\r\n\r\n    public void youWin() {\r\n        System.out.println(\"You are the winner!\");\r\n    }\r\n\r\n    public void youLose() {\r\n        System.out.println(\"You lose! The winner is \" + customStringRead);\r\n    }\r\n\r\n\r\n\r\n\r\n    public void illegalArgument() {\r\n        System.out.println(\"Illegal argument exception: \" + customStringRead);\r\n    }\r\n\r\n\r\n\r\n    public void waitForFullGame() {\r\n        System.out.println(\"Hold on, all the players will be ready in a few seconds\");\r\n\r\n        CardLayout cl = (CardLayout)(getSantoriniWindow().getCardHolder().getLayout());\r\n        cl.show(getSantoriniWindow().getCardHolder(), \"waitForPlayers\");\r\n    }\r\n\r\n    public void divinityCardNotExists() {\r\n        System.out.println(\"This divinity card doesn't exist. Please select a new one\");\r\n    }\r\n\r\n    public void divinityCardChosen() {\r\n        System.out.println(\"This divinity card has already been chosen. Please select a new one\");\r\n    }\r\n\r\n    public void illegalYesOrNo() {//non dovrebbe servire\r\n    }\r\n\r\n    public void illegalDivinity() {\r\n        System.out.println(\"Illegal divinity card\");\r\n    }\r\n\r\n    public void selectWorker() {\r\n        System.out.println(\"Player, please select the worker you want to move\");//inserire nickname giocatore\r\n    }\r\n\r\n\r\n    public void waitYourTurn() {\r\n        System.out.println(\"please wait\");\r\n        JOptionPane.showMessageDialog(null, \"please wait\");\r\n\r\n    }\r\n\r\n    private void workerNotYours() {\r\n        System.out.println(\"Player, this worker doesn't belong to you\");\r\n    }\r\n\r\n    private void displayAvailableDivinities() {\r\n        System.out.println(customStringRead);\r\n    }\r\n\r\n    private void displayDivinityMessage() {\r\n        CardLayout cl = (CardLayout)(getSantoriniWindow().getCardHolder().getLayout());\r\n        cl.show(getSantoriniWindow().getCardHolder(), \"cardChoice\");\r\n    }\r\n\r\n    private void unableToFinishTurn() {\r\n        System.out.println(\"You can't finish your turn. You lose.\");\r\n    }\r\n\r\n    private void workerMove() {\r\n        System.out.println(\"Select the cell where you want to move\");\r\n    }\r\n\r\n    private void workerBuild() {\r\n        System.out.println(\"Select the cell where you want to build\");\r\n    }\r\n\r\n    private void workerOptionalAbility() {\r\n        System.out.println(\"Select the cell where you want to DAFARE\");\r\n    }\r\n\r\n    private void illegalAction() {\r\n        System.out.println(\"Unknown worker action\");\r\n    }\r\n\r\n    private void askSpecialAction() {\r\n        Object[] options = {\"yes\", \"no\"};\r\n        int n = JOptionPane.showOptionDialog(santoriniWindow.getMainSetupFrame(),\r\n                \"Do you want to use your special ability\",\r\n                null,\r\n                JOptionPane.YES_NO_OPTION,\r\n                JOptionPane.QUESTION_MESSAGE,\r\n                null,\r\n                options,\r\n                null);\r\n        if (n==JOptionPane.YES_OPTION){\r\n            setStringRead(\"yes\");\r\n\r\n        }else if(n==JOptionPane.NO_OPTION){\r\n            setStringRead(\"no\");\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void decodeMessage(Message m) {\r\n        switch (m) {\r\n            case WELCOME:\r\n                break;\r\n            case INSERT_NUM_PLAYERS:\r\n                insertNumPlayer();\r\n                break;\r\n            case WAIT_FOR_NUM_PLAYERS:\r\n                waitForNumPlayer();\r\n                break;\r\n            case GAME_FULL:\r\n                gameFull();\r\n                break;\r\n            case CHOOSE_NICKNAME:\r\n                chooseNickname();\r\n                break;\r\n            case SET_AGE:\r\n                setAge();\r\n                break;\r\n            case WAIT_FOR_DIVINITIES:\r\n                waitForDivinities();\r\n                break;\r\n            case NOT_YOUR_TURN:\r\n                notYourTurn();\r\n                break;\r\n            case PLACE_YOUR_WORKERS:\r\n                placeYourWorkers();\r\n                break;\r\n            case PLACE_A_WORKER:\r\n                placeAWorker();\r\n                break;\r\n            case SET_CELL_X_COORD:\r\n                setCellXCoordinate();\r\n                break;\r\n            case SET_CELL_Y_COORD:\r\n                setCellYCoordinate();\r\n                break;\r\n            case YOU_WIN:\r\n                youWin();\r\n                break;\r\n            case YOU_LOSE:\r\n                youLose();\r\n            case SELECT_WORKER:\r\n                selectWorker();\r\n                break;\r\n            case WORKER_NOT_YOURS:\r\n                workerNotYours();\r\n                break;\r\n            case ASK_SPECIAL_ACTION:\r\n                askSpecialAction();\r\n                break;\r\n            case ILLEGAL_NICKNAME:\r\n                illegalNickname();\r\n                break;\r\n            case WAIT_FOR_FULL_GAME:\r\n                waitForFullGame();\r\n                break;\r\n            case DIVINITY_CARD_NOT_EXISTS:\r\n                divinityCardNotExists();\r\n                break;\r\n            case DIVINITY_CARD_CHOSEN:\r\n                divinityCardChosen();\r\n                break;\r\n            case ILLEGAL_YES_OR_NO:\r\n                illegalYesOrNo();\r\n                break;\r\n            case ILLEGAL_DIVINITY:\r\n                illegalDivinity();\r\n                break;\r\n            case DISPLAY_DIVINITY_MESSAGE:\r\n                displayDivinityMessage();\r\n                break;\r\n            case DISPLAY_AVAILABLE_DIVINITIES:\r\n                displayAvailableDivinities();\r\n                break;\r\n            case ILLEGAL_INT:\r\n                illegalInt();\r\n                break;\r\n            case ILLEGAL_STRING:\r\n                illegalString();\r\n                break;\r\n            case UNABLE_TO_FINISH_TURN:\r\n                unableToFinishTurn();\r\n                break;\r\n            case ILLEGAL_ARGUMENT:\r\n                illegalArgument();\r\n                break;\r\n            case WORKER_MOVE:\r\n                workerMove();\r\n                break;\r\n            case WORKER_BUILD:\r\n                workerBuild();\r\n                break;\r\n            case WORKER_OPTIONAL_ABILITY:\r\n                workerOptionalAbility();\r\n                break;\r\n            case ILLEGAL_ACTION:\r\n                illegalAction();\r\n                break;\r\n            case WAIT:\r\n                waitYourTurn();\r\n                break;\r\n            case CONNECTED_TO_SERVER:\r\n                break;\r\n            default:\r\n                System.out.println(\"Message not recognized\\n\");\r\n                System.out.println(m);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void updateCustomString() {\r\n        customStringRead = Client.getCustomString();\r\n\r\n    }\r\n\r\n    @Override\r\n    public String nextInput() {\r\n        while (!isDataReady) {\r\n            Thread.onSpinWait();\r\n        }\r\n        isDataReady = false;\r\n        return dataReadFromClient;\r\n\r\n    }\r\n\r\n    @Override\r\n    public void setStringRead(String dataRead) {\r\n        dataReadFromClient = dataRead;\r\n        isDataReady = true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void displayBoard() {\r\n\r\n    }\r\n\r\n    public static void setIP(String ipAddress){\r\n        Client.connectionHandling(ipAddress,Client.getServerSocketPort());\r\n    }\r\n\r\n    public static void setNickname(String nicknameRead){\r\n        nickname=nicknameRead;\r\n    }\r\n\r\n    public static void setAge(String ageRead){\r\n        age=ageRead;\r\n    }\r\n\r\n    public SantoriniWindow getSantoriniWindow() {\r\n        return santoriniWindow;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/it/polimi/ingsw/PSP38/client/GameModeGUI.java	(revision a75d8b2d514bb7951bce45cb03f6da1b5862fcd9)
+++ src/main/java/it/polimi/ingsw/PSP38/client/GameModeGUI.java	(date 1592822956015)
@@ -177,6 +177,7 @@
     private void displayDivinityMessage() {
         CardLayout cl = (CardLayout)(getSantoriniWindow().getCardHolder().getLayout());
         cl.show(getSantoriniWindow().getCardHolder(), "cardChoice");
+        getSantoriniWindow().getMainSetupFrame().setSize(1280,400);
     }
 
     private void unableToFinishTurn() {
